let todatestring = (value:int) {
    let Minutes = value % 60; 
    let Hours = (value - (value % 60)) / 60 % 24;
    let Days = (value - (value % (60*24))) / (60*24);
    let DaysString = case(Days < 10, strcat("0", toint(Days)), tostring(toint(Days)));
    let HoursString = case(Hours < 10, strcat("0", toint(Hours)), tostring(toint(Hours)));
    let MinutesString = case(Minutes < 10, strcat("0", toint(Minutes)), tostring(toint(Minutes)));
    let DateString = strcat(DaysString, ":", HoursString, ":", MinutesString);
    DateString
};

// Old testing
//StormEvents 
//| extend elapsedTime = datetime_diff('minute', EndTime, StartTime)
//| summarize AvgTimeElapsed = avg(elapsedTime) by Month = getmonth(StartTime)
//| sort by Month
//| extend Minutes = AvgTimeElapsed % 60, 
//Hours = (AvgTimeElapsed - (AvgTimeElapsed % 60)) / 60 % 24, 
//Days = (AvgTimeElapsed - (AvgTimeElapsed % (60*24))) / (60*24)
//| project Month, Days = case(Days < 10, strcat("0", toint(Days)), tostring(toint(Days))), 
//Hours = case(Hours < 10, strcat("0", toint(Hours)), tostring(toint(Hours))), 
//Minutes = case(Minutes < 10, strcat("0", toint(Minutes)), tostring(toint(Minutes)))
//| project Month, AvgTimeElapsed = strcat(Days, ":", Hours, ":", Minutes)
